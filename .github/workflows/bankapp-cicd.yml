name: Bank-app Pipeline

on:
  workflow_dispatch:
    inputs:
      DOCKER_TAG:
        description: 'Choose the Docker image tag for the deployment'
        required: true
        default: 'blue'
        type: choice
        options:
          - blue
          - green

jobs:
  build-test-package:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: sidraut007/spring-bankapp
      TAG: ${{ github.event.inputs.DOCKER_TAG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Maven compile
        run: mvn compile

      - name: Run tests
        run: mvn test -DskipTests=true

      - name: Package application
        run: mvn clean install -DskipTests=true

  docker-build-push:
    needs: build-test-package
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: sidraut007/spring-bankapp
      TAG: ${{ github.event.inputs.DOCKER_TAG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.TAG }}

  deploy-to-remote:
    needs: docker-build-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Replace Docker tag in docker-compose.yml
        run: |
          sed -i "s|sidraut007/spring-bankapp:.*|sidraut007/spring-bankapp:${{ github.event.inputs.DOCKER_TAG }}|g" docker-compose.yml

      - name: Copy docker-compose and .env to remote
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          source: |
            docker-compose.yml
            .env
          target: "~/bankapp"

      - name: Deploy via SSH using Docker Compose
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          script: |
            mkdir -p ~/bankapp
            cd ~/bankapp
            docker pull sidraut007/spring-bankapp:${{ github.event.inputs.DOCKER_TAG }}
            docker-compose down
            docker-compose up -d

            echo "Waiting for app to be healthy..."
            sleep 20
            curl -f http://localhost:8080/actuator/health || (echo "Health check failed!" && exit 1)



  # update-k8s-manifest:
  #   needs: docker-build-push
  #   runs-on: ubuntu-latest
  #   env:
  #     IMAGE_NAME: sidraut007/spring-bankapp
  #     TAG: ${{ github.event.inputs.DOCKER_TAG }}

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Configure Git for committing changes
  #       run: |
  #         git config user.email "github-actions@github.com"
  #         git config user.name "GitHub Actions"

  #     - name: Update K8s manifest image tag
  #       run: |
  #         sed -i 's|image: sidraut007/spring-bankapp.*|image: ${IMAGE_NAME}:${TAG}|' k8s/manifest/bankapp-deploy.yaml
  #         git add k8s/manifest/bankapp-deploy.yaml
  #         git commit -m "Update bankapp image tag to ${TAG}" || echo "No changes to commit"

  #     - name: Push changes back to main branch
  #       uses: ad-m/github-push-action@v0.6.0
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         branch: main

  # deploy-to-k8s:
  #   needs: update-k8s-manifest
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Setup kubectl
  #       uses: azure/setup-kubectl@v3
  #       with:
  #         version: 'latest'

  #     - name: Configure Kubeconfig
  #       run: |
  #         echo "${{ secrets.KUBECONFIG_DATA }}" > $HOME/.kube/config
  #         chmod 600 $HOME/.kube/config

  #     - name: Deploy Kubernetes resources
  #       working-directory: ./k8s/manifest
  #       run: |
  #         kubectl apply -f pv.yaml
  #         kubectl apply -f pvc.yaml
  #         kubectl apply -f mysql-secret.yaml
  #         kubectl apply -f mysql-config.yaml
  #         kubectl apply -f bankapp-secret.yaml
  #         kubectl apply -f bankapp-config.yaml
  #         kubectl apply -f .

  #     - name: Verify Deployment
  #       run: |
  #         kubectl get pods
  #         kubectl get svc
